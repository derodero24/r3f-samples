import { useGLTF } from '@react-three/drei';
import { ReactNode, Ref, forwardRef } from 'react';

import type { Euler, Group, Mesh, Vector3 } from 'three';

interface Props {
  children: ReactNode;
  texture: THREE.Texture;
  scale: number;
  rotation?: Euler;
  position?: Vector3;
}

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: akshatmittal (https://sketchfab.com/akshatmittal)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/2021-macbook-pro-14-m1-pro-m1-max-f6b0b940fb6a4286b18a674ef32af2d3
title: 2021 Macbook Pro 14" (M1 Pro / M1 Max)
*/
function M1({ texture, children, ...props }: Props, ref: Ref<Group>) {
  const { nodes, materials } = useGLTF('/m1-scroll/mbp-v1-pipe.glb');

  return (
    <group {...props} dispose={null}>
      <group
        ref={ref}
        position={[0, -0.43, -11.35]}
        rotation={[Math.PI / 2, 0, 0]}
      >
        <mesh
          geometry={(nodes['back_1'] as Mesh).geometry}
          material={materials['blackmatte']!}
        />
        <mesh
          receiveShadow
          castShadow
          geometry={(nodes['back_2'] as Mesh).geometry}
          material={materials['aluminium']!}
        />
        <mesh geometry={(nodes['matte'] as Mesh).geometry}>
          <meshLambertMaterial map={texture} toneMapped={false} />
        </mesh>
      </group>
      {children}
      <mesh
        geometry={(nodes['body_1'] as Mesh).geometry}
        material={materials['aluminium']!}
        material-color="#aaaaaf"
        material-envMapIntensity={0.2}
      />
      <mesh
        geometry={(nodes['body_2'] as Mesh).geometry}
        material={materials['blackmatte']!}
      />
    </group>
  );
}

export default forwardRef(M1);
